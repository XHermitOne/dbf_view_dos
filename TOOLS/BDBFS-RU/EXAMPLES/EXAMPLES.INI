;Файл инициализации может быть задан или через командную строку
;(BDBFS <file>.ini) или подгружен во время работы через Ctrl+F12
;Любые переменные могут быть закомментарены или исключены
;

[Main]
;Текущая база
	_base = 'New.Dbf'
;а можно предложить и выбор
;	_base = '*.Dbf'

;Драйвер по умолчанию
_DefaultRdd:='SIXCDX'
;_DefaultRdd:='SIXNTX'
;_DefaultRdd:='SIXMDX'
;_DefaultRdd:='SIXNSX'

;Форсированный режим (см. п.34 bdbfs.htm) выключен
_lForced:=.F.

;Все операции хронометрируются
_Timing:=.t.
;Выводится индикатор
_lMeter:=.T.
;С шагом (в записях)
_sx_step:=100

;Перекодировка клавиатуры
_USA_Keyboard:=[QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>]+"qwertyuiop[]asdfghjkl;'zxcvbnm,."
_My_Keyboard:=[ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮйцукенгшщзхъфывапролджэячсмитьбю]
;DOS/WIN
_Oem_Set:='АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐'+;
	  '└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ '

_Ansi_Set:='└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюя???ж???????????м'+;
	   '????нЖ??????????????????З???????ЁёЄєЇїЎў°∙·√№¤■ и╕е┤к║▓│п┐╖ ╣д а'

;Автосохранение/восстановление окружения
_AutoRestore:=.F.
_AutoSave:=.F.

;Реакция на нажатие Enter в файлере
__aExt:={{'*.PRN','LIST'},{'*.EXE','HIEW'},{'*.HT*','START'}}

;Если задана переменная _MemoEditor, то для редакции мемо и внешних
;файлов будет использован внешний редактор.
;Можно задать строку
;_MemoEditor:='Edit.com'
;Или массив, определяющий реакцию на разные поля (см.документацию)
_MemoEditor:={	{'BMP','pv',9,' /d'},;
		{'SAVER','',0,'','tmp.com'},;
		{'*','ME',0,''}	}

;Индексный файл - необходимы обе переменные,если нужно встать на запись _tmr
;иначе достаточно только _OldInd
;	_oldind = 'DATA'
;	_IndexFile = 'DATA'
;Начальная позиция в базе
;	_tmr=10

;Выражение на макро-клавише
_macro='Часто вводим'
;В буфере сейчас
_clipText = {'Victory !'}

;Размер буфера отката для REPLACE
_UndoSize:=1024


[Colors]
;Основной цвет
	_Bm = '7/1,0/3,N,4/7,7/4,7+/1,7+/4'
;Цвет Help и запросов
	_Im = 'w+/b*,n/w'
;Цвет результатов
	_CM = 'Gr+/N,W+/B'
;Цвет ожидания
	_Imb = 'n*/w,g+/n'
;Невыделенный цвет выбора
	_rev = '0/3'
;Цвет меню
	_MenuColor = 'Gr+/b,g+/b'
;Цвет невыбираемых элементов меню
	HiddenColor = 'w/b'
;Цвет заголовков
	_HdColor = 'G+/b*'


[conditions]	
;Полный перечень условий см. в Приложении 4 документации
;Условие Locate
	_LCONDIT	= ''
;Выражение поиска
	_GSearch	= ''
;Условие Seek
	_FCONDIT	= ''
;Маска поиска файлов
	_Mask		= '*.dbf'
;...

[History]
;Имена этого раздела образованы от имен условий через
;вставку во вторую позицию символа H

;Locate
	_HLCONDIT = {'Num>5','Num<10','Between(Num,5,10)'}
;глобального поиска
;	_HGSearch	= {}
;Seek
;	_HFCONDIT	= {}
;Просматриваемые базы
	_HDbfc		= {'O:\rcb\rcb0102','c:\fox\nsi\f748_sl'}
;Записи в базе
	_HNGoto		= {10,23,53}
;...

[PRINT]
;Центровка чисел при выводе
	_NeedCentr := .F.
;Печатать ли номера записей
	_NeedRec := .T.
;Печать заголовков колонок на каждой странице
	_NeedHeadPage := .T.
;Печать номеров страниц
	_NeedPrPage := .T.
;Печать стандартной шапки отчета
	_NeedMainHead := .F.
;Печать шапки отчета на каждой странице
	_lTitleAll := .F.
;Печать цифровых заголовков для колонок на первой странице
	_lDgtHdr := .F.
;Печать цифровых заголовков для колонок на последующих страницах
	_lDhAll := .T.
;Прогон страниц после
	_NeedEject := .F.
;Стартовая последовательность принтера
	_PSCode := ''
;Конечная последовательность принтера
	_PECode := ''
;Левая граница
	_LMargin := 0
;Длина страницы (0=лента)
	_Plength := 0
;Устройство-принтер
	_printer := 'PRN'
;Дописывать ли файл вывода
	_NeedApFile := .F.
;Суммировать ли числовые колонки
	_NeedSum := .T.



[Own]
;Здесь можно задать все необходимые для Вашего случая выражения
;Ниже идут примеры

;Примеры использования функций без присвоения
DevPos(10,10)
=DevOut([Подождите,идет загрузка...])
Tone(200,1)
Tone(500,1)
=Tone(800,1)

;разные переменные

MyNum = 100

MyNum2 = MyNum*2	// использую предыдущее определение

crlf = chr(13)+chr(10)
Kards=''
MyArray = {100,200,'3-е измерение'}

MyAccount=32100162301
MyMfo=304030

BigArray=Array(200)
=AFILL(BigArray,'STACK')

;Можете попробовать использование блоков: {ALT-G} Eval(Squart,<ваша величина>)

Sqrt={|i| i * i}
Squart = {|i| Nfind('Площадь круга диаметра '+STR(i,3)+' = '+LTRIM(STR(3.1415 * EVAL(Sqrt,i),16,2)))}

;Еще пример - с множественными параметрами
Century := '01/01/2001'
DaysFrom={|Date1,Date2,Msg|Nfind(IF(Empty(Msg),'Прошло уже ',Msg)+SpaceString(IF(Empty(Date2),Date(),Date2)-Date1)+' дней')}
To21={||Eval(DaysFrom,CTOD(Century),DATE(),'В 21-м веке прошло ')}

;примеры назначения горячих клавиш - будьте ОЧЕНЬ внимательны
;Alt_A = среднее по полю
SetKey(286,{|| Nfind(SpaceString(Aver('num'))) } )

;Alt_V = вызов Волков-коммандер
SetKey(303, {|| BliRun('VC')})

;Alt_4 Предложить файл на редакцию
SetKey(379,{|| __Keyboard('? ModiFile("")'+chr(19)+chr(19) ) } )

;Определим пользовательское меню (вызывается по F12).
UserMenuPrompts:={'Сумма больших',;
		  'Количество нулевых',;
		  'Среднее по полю',;
		  'Выйти в VC'}

//напомню,_c_f - название текущего поля
UserMenuAct:=  {{||ShowNum(Sum('Num','Num>30'))},;
		{||ShowNum(Coun('EMPTY('+_c_f+')' ))},;
		{||ShowNum(Aver(_C_F),'Среднее по '+_C_F+' =')},;
		{||BliRun('Vc')}}

;Преобразование OemToAnsi при экспорте
_lexp_o2aq:=.F.	//Вопрос не нужен
_lexp_o2a:=.T.	//А преобразование нужно

;пример подгрузки вторичного файла
#include proba.ini

;Можно определить другой цветовой набор для фона
SetBlink(.f.)
_Bm = '15/1*,0/3,N,4/7,7/4,7+/1,7+/4'
;Для задания установок SET см.файл set.ch из поставки Clipper 5.x
; путь SET PATH
;Set(6,'.\;c:\fox\nsi')

;А можно включить стандартный клипперовский файл и называть по-человечески,
;заплатив за это дополнительной памятью...
#include f:\cl5\include\set.ch
SET(_SET_PATH,'.\;c:\fox\nsi')


;Примеры определения команд
#xcommand MODIFY COMMAND <x> => ModiFile(<x>)
;Применение: ? MODIFY COMMAND 'c:\CONFIG.SYS'

;без параметра
#xcommand INVERT => DBEval({||rlock(),IF(DELE(),dbRecall(),dbDelete())})

;можно определить неанглийскую команду
#xcommand Среднее => Aver(_C_F)

;один параметр функции предопределенный(название поля), другой-вводится.
#xcommand Сумма для <x> => Sum(_C_F,<x>)
;такой же пример для системной функции копирования нескольких последующих
;записей
#xcommand Копия <x> => __dbCopy('NewFile', , , , <x> , , ,)

;Параметр может быть использован более одного раза
#xcommand КР <x> => 'Контрольный от <x> = '+SUBSTR(Vkrz14(<x>,304030),5,1)

#include clipper.ch	//Включить команды клиппер (in plugins)
;SET EXACT OFF		//И сразу кое-что вызвать
;SET DELETED OFF


;Примеры определения макроклавиш

;банковские функции через меню на ALT+Б
#MACRO_IN_BROWSE 307 => {-9,'ч','5'}

;Проверить заголовок базы (через вычисление)
#MACRO_IN_BROWSE 382 => '?CheckDbfSize()'+CHR(13)

;Область не задана-работает во всех режимах
#MACRO 382 => 'Пример частого ввода на ALT+7'

;Копирование значения "слева" на ALT+<- в режиме редакции поля
#MACRO_IN_FIELD 411 => {27,411,255,13}

;Шаблон для задания условия поисков и фильтров по текстовому полю на ALT+8
#MACRO_IN_DIALOG 383 => 'Like("*",&_C_F)'+REPL(CHR(19),9)

;Пример использования блоков - Alt+T вводит текущее время.
#MACRO_IN_DIALOG 276 => {|| Time()}
